var result=$("#result"),docParser={read:!1,styles:{}};$("#file").on("change",function(evt){if(0==evt.target.files.length)return!1;$.each(sessionStorage,function(id){delete sessionStorage[id]}),docParser.handleFile(evt.target.files[0])}),docParser.handleFile=function(f){var title=$("<h4>",{text:f.name?f.name:""}),fileContent=$("<div>");result.html(title),result.append(fileContent),docParser.read=!0,docParser.component(f)},docParser.component=function(f){JSZip.loadAsync(f).then(function(part){part.file("word/styles.xml").async("string").then(function(text){var parser=new DOMParser;docParser.style(parser.parseFromString(text.replace(/w:/g,"").replace(/wp:/g,""),"text/xml").childNodes[0].childNodes)}),part.file("word/document.xml").async("string").then(function(text){var parser=new DOMParser;docParser.body(parser.parseFromString(text.replace(/w:/g,"").replace(/wp:/g,""),"text/xml").childNodes[0].childNodes[0].childNodes)});var media=part.file(/media/);media.length>0&&media.forEach(function(image,i){part.file(image.name).async("blob").then(function(text){if(void 0===sessionStorage["#img_"+(i+1)]){var reader=new FileReader;reader.readAsDataURL(text),reader.onload=function(){sessionStorage["#img_"+(i+1)]=!0,$("#img_"+(i+1)).attr("src",this.result)}}})})})},docParser.style=function(xml){xml.forEach(function(style){"style"==style.nodeName&&(void 0!==style.attributes[2]?docParser.styles[style.attributes[2].nodeValue.replace("-","")]=style.childNodes[0].attributes[0].nodeValue.replace("-",""):void 0!==style.attributes[1]&&(docParser.styles[style.attributes[1].nodeValue.replace("-","")]=style.childNodes[0].attributes[0].nodeValue.replace("-","")))})},docParser.body=function(xml){xml.forEach(function(p,pIndex){"p"==p.nodeName?(void 0===$("#p_"+pIndex).html()&&$("#result").append($("<p>",{id:"p_"+pIndex})),p.childNodes.forEach(function(pc,pi){if(0==pi)pc.childNodes.forEach(function(pAttr){var test=docParser[pAttr.nodeName];"function"==typeof test&&test("#p_"+pIndex,pAttr.attributes)});else if(pc.childNodes.length>1)pc.childNodes.forEach(function(pData,pDataIndex){var test,test;0==pDataIndex?(void 0===$("#pr_"+pIndex+"_"+pi).html()&&$("#p_"+pIndex).append($("<span>",{id:"pr_"+pIndex+"_"+pi})),"function"==typeof(test=docParser[pData.nodeName])?pData.childNodes&&pData.childNodes.length>0&&test("#pr_"+pIndex+"_"+pi,pData.childNodes):console.log(pData,pData.nodeName)):"function"==typeof(test=docParser[pData.nodeName])?test("#pr_"+pIndex+"_"+pi,pData.childNodes):console.log(pData,pData.nodeName)});else if(pc.childNodes[0]&&pc.childNodes[0].childNodes[0]){var test=docParser[pc.childNodes[0].childNodes[0].nodeName.replace("#","")];"function"==typeof test&&(void 0===$("#pr_"+pIndex+"_"+pi).html()&&$("#p_"+pIndex).append($("<span>",{id:"pr_"+pIndex+"_"+pi})),test("#pr_"+pIndex+"_"+pi,pc.childNodes[0].childNodes[0].nodeValue))}})):"tbl"==p.nodeName&&(void 0===$("#tbl_"+pIndex).html()&&$("#result").append($("<table>",{id:"tbl_"+pIndex,style:"margin-left:10%;width:80%"})),p.childNodes.forEach(function(tr,iTr){"tr"==tr.nodeName&&(void 0===$("#tr_"+pIndex+"_"+iTr).html()&&$("#tbl_"+pIndex).append($("<tr>",{id:"tr_"+pIndex+"_"+iTr})),tr.childNodes.forEach(function(tc,iTc){"tc"==tc.nodeName&&(void 0===$("#tc_"+pIndex+"_"+iTr+"_"+iTc).html()&&$("#tr_"+pIndex+"_"+iTr).append($("<td>",{id:"tc_"+pIndex+"_"+iTr+"_"+iTc})),void 0===tc.childNodes[1].childNodes[1]?docParser.tc("#tc_"+pIndex+"_"+iTr+"_"+iTc," ",tc.childNodes[0].childNodes[1],"#tr_"+pIndex+"_"+iTr):docParser.tc("#tc_"+pIndex+"_"+iTr+"_"+iTc,tc.childNodes[1].childNodes[1].childNodes,tc.childNodes[0].childNodes[1],"#tr_"+pIndex+"_"+iTr))}))}))})},docParser.pStyle=function(target,attr){isNaN(attr[0].nodeValue)?$(target).addClass(attr[0].nodeValue):$(target).addClass(docParser.styles[attr[0].nodeValue])},docParser.rPr=function(target,attr){var st={};if(attr.length>1)attr.forEach(function(rPr,i){var test=docParser[rPr.nodeName];"function"==typeof test?test(target,rPr):console.log(rPr.nodeName)});else if(attr[0]){var test=docParser[attr[0].nodeName];"function"==typeof test?test(target,attr[0]):console.log(attr[0].nodeName)}$(target).css(st)},docParser.vertAlign=function(target,val){$(target).css({"vertical-align":val.attributes[0].nodeValue.replace("script",""),"font-size":"60%"})},docParser.b=function(target){$(target).css({"font-weight":"bold"})},docParser.bCs=function(target){docParser.b(target)},docParser.i=function(target){$(target).css({"font-style":"italic"})},docParser.iCs=function(target){docParser.i(target)},docParser.u=function(target){$(target).css({"text-decoration":"underline"})},docParser.rFonts=function(target,val){val.attributes&&val.attributes.length>1&&$(target).css({"font-family":val.attributes[val.attributes.length-1].nodeValue})},docParser.sz=function(target,val){$(target).css({"font-size":val.attributes[0].nodeValue})},docParser.szCs=function(target,val){docParser.sz(target,val)},docParser.color=function(target,val){$(target).css({color:"#"+val.attributes[0].nodeValue})},docParser.caps=function(target,val){val.attributes[0]&&$(target).css({})},docParser.smallCaps=function(target,val){val.attributes[0]&&$(target).css({})},docParser.lang=function(target,val){},docParser.kern=function(target,val){},docParser.r=function(target,data){if(console.log(data),data.length<2)return!1;data[0]},docParser.t=function(target,data){data[0]&&$(target).html(data[0])},docParser.text=function(target,data){data&&$(target).html(data)},docParser.drawing=function(target,data){var id,cx,cy="";$.each(data[0].childNodes,function(i,node){"docPr"==node.nodeName?id=node.attributes[0].nodeValue:"extent"==node.nodeName&&(cx=node.attributes[0].nodeValue,cy=node.attributes[1].nodeValue)}),void 0===$("#img_"+id).html()&&$(target).append($("<img>",{id:"img_"+id,style:"width:"+cx/10240+"px;height:"+cy/10240+"px;align:center"}))},docParser.tc=function(target,data,border,parent){" "==data?($(target).html("&nbsp;"),border.childNodes.forEach(function(tpr){switch(tpr.nodeName){case"top":$(parent).addClass("borderTop");break;case"bottom":$(parent).addClass("borderBottom")}})):($(target).html(data[1].childNodes[0].nodeValue),border.childNodes.forEach(function(tpr){switch(tpr.nodeName){case"top":$(parent).addClass("borderTop");break;case"bottom":$(parent).addClass("borderBottom")}}))};